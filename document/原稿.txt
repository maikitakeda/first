
2年次の成果について報告いたします。
科学環境システム事業部の武田です。
よろしくお願いします。


本日はこの内容に沿って報告いたします。


まず初めに育成計画の達成状況について報告いたします。


2016年度の育成計画として主に4つ項目を挙げました。
まず1つ目は実装スキル、ミドルウェアに関するスキルの向上です。
これについては、プロジェクトで様々な機能の実装を担当したり、サーバーの設定を行ったりすることで達成しました。
2つ目は品質に関する知識の向上です。
これについても、MSTestによる単体テストの自動化に取り組んだり、CIサーバを1から構築したりすることで達成することが出来ました。
3つ目はお客様とのコミュニケーションスキルの向上です。
これについても、お客様との打ち合わせに積極的に参加し、やり取りを行うことで達成しました。
4つ目は文書作成スキルの向上です。
これについても、議事録の作成やメールでの文書作成等で達成しました。
以上の育成計画を実施することで、開発者として技術的にも対人的にも1つレベルを上げることが出来ました。


続きまして、課題達成型QCストーリー活動について報告いたします。


まず、初めにテーマの選定を行いました。
2016年度に担当していたプロジェクトで品質という観点から分析を行いました。
その結果、二つの課題があることが判明しました。
一つ目は単体テストコードを充実させるです。
二つ目は開発サーバのテスト環境を整備するです。
これらの課題の優先順位を評価したところ、一つ目は代替案で対応可能であること、工数が大変かかることから優先度を低としました。
一方、二つ目は共通課題であること、工数も一つ目に比べて低いことから優先度を高としました。
したがって、今回は開発用サーバのテスト環境を整備するをテーマとしました。


続けて、課題の明確化を行いました。
課題の現状とありたい姿を分析しました。
その結果、アプリが最新オン状態で動作確認できるようにしたいというありたい姿に対して
現状は開発サーバのアプリがリポジトリより古いことが多いことが分かりました。
現状とありたい姿とのギャップとしてデプロイの頻度が挙げられます。
これより、デプロイ作業に焦点を当てることにしました。
デプロイ作業の手間を削減するため、目標をデプロイの自動化としました。


次に、方策の立案を行いました。
デプロイの自動化を達成する方策として二つ挙げました。
一つ目はCIサーバでのデプロイです。
二つ目はバッチの定期実行です。
これらの方策を系統図で評価しました。
CIサーバでのデプロイは実例も多く、取り組みやすいことが分かりました。
一方、バッチの定期実行は実例があまりなく、実現できるか不安があることが分かりました。
以上より、CIサーバで自動デプロイすることにしました。


最適策を決定したので、実行に移しました。
実行した内容は主に二つあります。
一つ目はCIサーバの構築です。
使用したのはJenkinsです。
2つ目はデプロイの自動化設定です。
リポジトリが更新されたらデプロイを行うジョブを作成しました。
これらの対策を実施する際に問題が二つ発生しました。


一つ目の問題はJenkinsでPowerShellスクリプトを実行する際に開発サーバへのアクセスが拒否されたことです。
原因は、Jenkinsへのログオンがデフォルトでローカルシステムアカウントに設定されているためでした。
そこで、開発サーバにアクセスできるアカウントを設定することで解決しました。


二つ目の問題はデプロイ処理が完了しているにもかからわず、JenkinsがFailureと判定してしまうことです。
原因はPowerShellスクリプトの戻り値が0の場合SUCCESSと判定しますが、robocopyが成功した際の戻り値が0~7と0以外の場合があるからでした。
そこで、robocopyが成功した場合は0を返すようにすることで解決しました。


以上の対応を行うことで、Jenkinsが定期的にリポジトリを監視し、リポジトリの更新を検知したら、開発用サーバに自動でデプロイするようになりました。
開発者がデプロイしなくても常に開発用サーバのアプリが最新の状態に保たれるようになったことから、開発用サーバのテスト環境を整備するという課題を達成することが出来ました。


この効果が持続されるように、プロジェクトのwikiに実施した内容の概要を示すのと同時に、トラブルが発生した場合の対処法等を残しました。


これまでの活動を振り返ります。
マインドマップやマトリクスを活用し、課題を明らかにするとともに、現状を分析し、ありたい姿とのギャップを見出すことが出来るようになりました。
系統図を用いて課題に対する方策を挙げるとともに、どの方策が有効であるかを検討・評価することが出来るようになりました。
問題が発生した場合でも、原因を究明し、解消することで最後まで方策を実施することが出来ました。
歯止めについて、対策は実施しましたが、まだその対策が有効であるかを確認できていないので、今後確認していきたいです。
今回実施した流れをほかの業務にも応用し、プロジェクトの品質向上に繋げていきたいと考えています。
今後は、もう一つの課題にあった単体テストを充実させ、デプロイ前に自動テストを組み込みたいです。
以上がQCストーリー活動となります。


最後に将来に向けた抱負について述べます。


私はオールラウンダーな技術者になります。
これまで.NETのスキルを磨いたり、セキュリティスペシャリストを取得し、実際にプロジェクトでセキュリティ対策を行ったり、QCストーリー活動でも触れたCIサーバの構築などを行ってきました。
今後は、GISのWebアプリ開発スキル、MVVMアプリの開発スキルを身に付けていきます。
特に今年度中にGISのWebアプリの設計・実装を出来るようになります。


以上で報告を終了します。ご清聴ありがとうございました。


